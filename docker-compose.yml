version: '3.8'

networks:
  app_network:

services:
  app:
    image: app
    container_name: dmh_app
    env_file: ./src/.env
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - app_network

  nginx:
    image: nginx:stable-alpine
    container_name: dmh_nginx
    ports:
      - "8088:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - mysql
    networks:
      - app_network

  mysql:
    image: mysql:5.7.22
    container_name: dmh_mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: homestead
      DB_HOST: host.docker.internal
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAG: dev
      SERVICE_NAME: mysql
    networks:
      - app_network

#  # Cache
#  cache:
#    container_name: dmh_cache
#    build:
#      context: ./docker/redis
#    image: redis:4-alpine
#    privileged: true
#    restart: always
#    ports:
#      - 6379:6379
#    volumes:
#      - cache-data:/data
#    networks:
#      - app_network

#  scheduler:
#    image: app
#    container_name: dmh_scheduler
#    depends_on:
#      - app
#    volumes:
#      - .:/var/www/html
#    environment:
#      APP_ENV: local
#      CONTAINER_ROLE: scheduler
#      CACHE_DRIVER: redis
#      QUEUE_DRIVER: redis
#      REDIS_HOST: host.docker.internal
#    networks:
#      - app_network

  # Adminer
  adminer:
    container_name: dmh_adminer
    image: adminer:4.7
    restart: always
    ports:
      - 8089:8080
    links:
      - mysql
    networks:
      - app_network

volumes:
  mysql: {  }
  cache-data: {  }
